/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package edu.neu.csye6200.views;

//import static edu.neu.csye6200.DB.db;
import edu.neu.csye6200.DB;
import edu.neu.csye6200.controllers.StudentController;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.JFileChooser;
//import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author dubey
 */
public class StudentRegister extends javax.swing.JFrame {

    /**
     * Creates new form StudentRegister
     */
    public StudentRegister() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        heading = new javax.swing.JLabel();
        studentPanel = new javax.swing.JPanel();
        nameLabel = new javax.swing.JLabel();
        dobLabel = new javax.swing.JLabel();
        dobText = new javax.swing.JTextField();
        nameText = new javax.swing.JTextField();
        emailLabel = new javax.swing.JLabel();
        emailText = new javax.swing.JTextField();
        parentPanel = new javax.swing.JPanel();
        parentNameLabel = new javax.swing.JLabel();
        addressLabel = new javax.swing.JLabel();
        phoneLabel = new javax.swing.JLabel();
        parentNameText = new javax.swing.JTextField();
        addressText = new javax.swing.JTextField();
        phoneText = new javax.swing.JTextField();
        addStudentBtn = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        sregBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1680, 700));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        heading.setFont(new java.awt.Font("Arial", 3, 14)); // NOI18N
        heading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        heading.setText("STUDENT REGISTRATION");
        getContentPane().add(heading, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 10, 250, -1));

        studentPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "STUDENT DETAILS", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 11))); // NOI18N

        nameLabel.setFont(new java.awt.Font("Arial", 1, 10)); // NOI18N
        nameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nameLabel.setText("NAME");

        dobLabel.setFont(new java.awt.Font("Arial", 1, 10)); // NOI18N
        dobLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dobLabel.setText("DATE OF BIRTH");

        dobText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dobTextActionPerformed(evt);
            }
        });

        nameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameTextActionPerformed(evt);
            }
        });

        emailLabel.setFont(new java.awt.Font("Arial", 1, 10)); // NOI18N
        emailLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        emailLabel.setText("EMAIL ID");

        javax.swing.GroupLayout studentPanelLayout = new javax.swing.GroupLayout(studentPanel);
        studentPanel.setLayout(studentPanelLayout);
        studentPanelLayout.setHorizontalGroup(
            studentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentPanelLayout.createSequentialGroup()
                .addContainerGap(83, Short.MAX_VALUE)
                .addGroup(studentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(emailLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dobLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addGroup(studentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nameText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emailText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dobText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(103, 103, 103))
        );
        studentPanelLayout.setVerticalGroup(
            studentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, studentPanelLayout.createSequentialGroup()
                .addContainerGap(51, Short.MAX_VALUE)
                .addGroup(studentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emailLabel)
                    .addComponent(emailText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(studentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameLabel))
                .addGap(39, 39, 39)
                .addGroup(studentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dobText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dobLabel))
                .addGap(53, 53, 53))
        );

        getContentPane().add(studentPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 54, -1, -1));

        parentPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "PARENT DETAILS", javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 11))); // NOI18N

        parentNameLabel.setFont(new java.awt.Font("Arial", 1, 10)); // NOI18N
        parentNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        parentNameLabel.setText("NAME");

        addressLabel.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        addressLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        addressLabel.setText("ADDRESS");

        phoneLabel.setFont(new java.awt.Font("Arial", 1, 10)); // NOI18N
        phoneLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        phoneLabel.setText("PHONE");

        parentNameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parentNameTextActionPerformed(evt);
            }
        });

        addressText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addressTextActionPerformed(evt);
            }
        });

        phoneText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoneTextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout parentPanelLayout = new javax.swing.GroupLayout(parentPanel);
        parentPanel.setLayout(parentPanelLayout);
        parentPanelLayout.setHorizontalGroup(
            parentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(parentPanelLayout.createSequentialGroup()
                .addGroup(parentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(parentPanelLayout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(parentNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, parentPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(parentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addressLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(phoneLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                .addGroup(parentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addressText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(parentNameText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(phoneText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(61, 61, 61))
        );
        parentPanelLayout.setVerticalGroup(
            parentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(parentPanelLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(parentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(parentNameLabel)
                    .addComponent(parentNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(parentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addressText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addressLabel))
                .addGap(27, 27, 27)
                .addGroup(parentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(phoneLabel)
                    .addComponent(phoneText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(88, Short.MAX_VALUE))
        );

        getContentPane().add(parentPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 350, -1, -1));

        addStudentBtn.setFont(new java.awt.Font("Arial", 1, 10)); // NOI18N
        addStudentBtn.setText("ADD");
        addStudentBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStudentBtnActionPerformed(evt);
            }
        });
        getContentPane().add(addStudentBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 400, -1, -1));

        jButton1.setFont(new java.awt.Font("Arial", 1, 10)); // NOI18N
        jButton1.setText("UPLOAD FILE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 400, -1, -1));

        sregBack.setFont(new java.awt.Font("Arial", 1, 10)); // NOI18N
        sregBack.setText("BACK");
        sregBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sregBackActionPerformed(evt);
            }
        });
        getContentPane().add(sregBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 60, -1, -1));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\dubey\\Downloads\\ood_project-main (1)\\ood_project-latest\\src\\Assets\\stback1.jpg")); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-5, -6, 1300, 640));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addStudentBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStudentBtnActionPerformed

        try {
            if (nameText.getText().isEmpty() || emailText.getText().isEmpty() || dobText.getText().isEmpty()
                    || parentNameText.getText().isEmpty() || addressText.getText().isEmpty() || phoneText.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Fields cannot be left empty");
                return;
            }

            String studentName = nameText.getText();
            String parentName = parentNameText.getText();

            boolean flag;

            flag = studentName.matches("^[a-zA-Z '-]+$");

            if (flag == false) {
                JOptionPane.showMessageDialog(null, "Student name cannot have integer values");
                return;
            }

            flag = parentName.matches("^[a-zA-Z '-]+$");

            if (!flag) {
                JOptionPane.showMessageDialog(null, "Parent name cannot have integer values");
                return;
            }

            String email = emailText.getText();

            flag = email.matches("^[a-zA-Z0-9._-]+@[a-zA-Z0-9]+.[a-zA-Z]+$");

            if (!flag) {
                JOptionPane.showMessageDialog(null, "Email must be in format of example@domain.com");
                return;
            }
            Statement stmt = DB.getObj().conn.createStatement();

            ResultSet rs = stmt.executeQuery("Select * From student");
            while (rs.next()) {
                if (rs.getObject("email").equals(email)) {
                    JOptionPane.showMessageDialog(null, "Email already exists");
                    return;
                }
            }

            String phoneNumber = phoneText.getText();

            if (phoneNumber.length() != 10) {
                JOptionPane.showMessageDialog(null, "Phone Number must be of 10 digits");
                return;
            }
            flag = phoneNumber.matches("^[0-9]+$");
            if (!flag) {
                JOptionPane.showMessageDialog(null, "Phone Number must have digits only");
                return;
            }
            rs = stmt.executeQuery("Select * From parent");
            while (rs.next()) {
                if (rs.getObject("phone").equals(phoneNumber)) {
                    JOptionPane.showMessageDialog(null, "Phone Number already exists");
                    return;
                }
            }
            Date dobFromString = null;
            try {
                dobFromString = java.sql.Date.valueOf(dobText.getText());
            } catch (IllegalArgumentException e1) {
                System.out.println(e1.getMessage());
            }

            if (dobFromString == null) {
                JOptionPane.showMessageDialog(null, "DOB must be in format of yyyy-mm-dd");
                return;
            }

            StudentController std = new StudentController();

            std.addStudentAndParent(studentName, dobFromString, parentName, phoneNumber, addressText.getText(), email);
            JOptionPane.showMessageDialog(null, "Student Registered Successfully!");
            nameText.setText("");
            addressText.setText("");
            phoneText.setText("");
            parentNameText.setText("");
            dobText.setText("");
            emailText.setText("");
        } catch (Exception e) {
            System.out.println("Error" + e.getMessage());
        }

    }//GEN-LAST:event_addStudentBtnActionPerformed

    private void sregBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sregBackActionPerformed

        this.toBack();

        MainFrame mf2 = new MainFrame();
        mf2.setVisible(true);
        mf2.toFront();
        this.setVisible(false);
    }//GEN-LAST:event_sregBackActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        StudentController std = new StudentController();

        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File("./"));
        int result = fileChooser.showOpenDialog(this);
        int batchSize = 20;
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            System.out.println("Selected file: " + selectedFile.getAbsolutePath());

            if (selectedFile.getAbsolutePath().endsWith(".csv")) {
                String line;
                try {

                    BufferedReader lineReader = new BufferedReader(new FileReader(selectedFile));

                    String lineText = null;
                    int count = 0;
                    lineReader.readLine();
                    while ((lineText = lineReader.readLine()) != null) {
                        System.out.println(lineText);

                        String[] data = lineText.split(",");

                        String student = data[0];
                        String dobFromString = data[1];
                        String parentName = data[2];
                        String phoneNumber = data[3];
                        String address = data[4];
                        String emailaddr = data[5];

                        String studentName = student.substring(1);

                        String email = emailaddr.substring(0, emailaddr.length() - 1);
                        Date date = Date.valueOf(dobFromString);

                        std.addStudentAndParent(studentName, date, parentName, phoneNumber, address, email);
                    }

                } catch (Exception e) {

                    System.out.println(e);
                }
                JOptionPane.showMessageDialog(null, "Student Registered Successfully!");

            } else {

                JOptionPane.showMessageDialog(this, "Please select csv files only!!", "CSV file required ", 2);
            }

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void dobTextActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_dobTextActionPerformed   

    }// GEN-LAST:event_dobTextActionPerformed

    private void nameTextActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_nameTextActionPerformed

    }// GEN-LAST:event_nameTextActionPerformed

    private void addressTextActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_addressTextActionPerformed

    }// GEN-LAST:event_addressTextActionPerformed

    private void phoneTextActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_phoneTextActionPerformed

    }// GEN-LAST:event_phoneTextActionPerformed

    private void parentNameTextActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_parentNameTextActionPerformed

    }// GEN-LAST:event_parentNameTextActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addStudentBtn;
    private javax.swing.JLabel addressLabel;
    private javax.swing.JTextField addressText;
    private javax.swing.JLabel dobLabel;
    private javax.swing.JTextField dobText;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JTextField emailText;
    private javax.swing.JLabel heading;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField nameText;
    private javax.swing.JLabel parentNameLabel;
    private javax.swing.JTextField parentNameText;
    private javax.swing.JPanel parentPanel;
    private javax.swing.JLabel phoneLabel;
    private javax.swing.JTextField phoneText;
    private javax.swing.JButton sregBack;
    private javax.swing.JPanel studentPanel;
    // End of variables declaration//GEN-END:variables
}
